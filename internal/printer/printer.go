// print to file template
package printer

import "strings"

// String - convert to string
func String(packageName, typeName, fields string) string {
	result := strings.ReplaceAll(template, "$(package)", packageName)
	result = strings.ReplaceAll(result, "$(fullType)", packageName+"."+typeName)
	result = strings.ReplaceAll(result, "$(type)", typeName)
	result = strings.ReplaceAll(result, "$(fields)", fields)
	fmtString := ""
	if strings.Contains(fields, "fmt.") {
		fmtString = "\"fmt\"\n"
	}
	result = strings.ReplaceAll(result, "$(fmt)", fmtString)
	return result
}

var template = `// Code generated by structstringer
// DO NOT EDIT!
package $(package)

import (
	$(fmt)"strings"
	"strconv"
) 



func (t $(type)) String() string {
	var builder strings.Builder
	builder.Grow(1024) // TODO count
	builder.WriteString("\n$(fullType){")$(fields)
	builder.WriteString("\n}")
	return builder.String()
}
`
